name: Build bcm27xx-bcm2709
on: [push]

jobs:
    build:
        name: Prepare and build bcm27xx bcm2709 images
        runs-on: ubuntu-latest

        steps:
            - name: Setup Ubuntu
              run: |
                sudo apt update
                sudo apt install build-essential ccache ecj fastjar file g++ gawk \
                gettext git java-propose-classpath libelf-dev libncurses5-dev \
                libncursesw5-dev libssl-dev python python2.7-dev python3 unzip wget \
                python3-distutils python3-setuptools python3-dev rsync subversion \
                swig time xsltproc zlib1g-dev


            - name: Checkout
              uses: actions/checkout@v2

            - name: Update and install feeds
              run: |
                ./scripts/feeds update -a
                ./scripts/feeds install -a

            - name: Generate config for bcm27xx bcm2709
              run: |
                wget -c https://downloads.openwrt.org/snapshots/targets/bcm27xx/bcm2709/config.buildinfo -O .config
                echo "CONFIG_PACKAGE_luci=y" >> .config
                echo "CONFIG_PACKAGE_kmod-usb-net-rtl8152=y" >> .config
                make defconfig

            - name: Download package sources
              run: make download V=s

            - name: Build tools
              run: |
                make tools/install -j$(nproc) V=s || \
                make tools/install V=s

            - name: Build toolchain
              run: |
                make toolchain/install -j$(nproc) V=s || \
                make toolchain/install V=s

            - name: Build target images
              run: |
                make -j$(nproc) V=s 'IGNORE_ERRORS=n m' || \
                make V=s 'IGNORE_ERRORS=n m'

            - name: TAR output
              run: tar -cvf bcm27xx-images.tar bin/targets/bcm27xx/bcm2709

            - name: Upload artifacts
              uses: actions/upload-artifact@v2
              with:
                name: bcm27xx-images
                path: bcm27xx-images.tar

    release:
          name: Make a release
          runs-on: ubuntu-latest
          needs: build

          steps:
            - name: Download the image artifacts
              uses: actions/download-artifact@v2
              with:
                name: bcm27xx-images

            - name: Extract the image artifacts
              run: tar xf bcm27xx-images.tar

            - name: Create a release
              uses: "marvinpinto/action-automatic-releases@latest"
              with:
                repo_token: "${{ secrets.GITHUB_TOKEN }}"
                prerelease: true
                title: "bcm27xx bcm2709 prebuilt images"
                automatic_release_tag: "bcm27xx-bcm2709"
                files: bin/targets/bcm27xx/bcm2709/*
